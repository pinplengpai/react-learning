{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createSuper from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/src/components/Inventory.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Logic';\nimport base, { firebaseApp } from \"../base\";\n\nvar Inventory = /*#__PURE__*/function (_React$Component) {\n  _inherits(Inventory, _React$Component);\n\n  var _super = _createSuper(Inventory);\n\n  function Inventory() {\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      uid: null,\n      owner: null\n    };\n\n    _this.authHandler = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authData) {\n        var store;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return base.fetch(_this.props.storeId, {\n                  context: _assertThisInitialized(_this)\n                });\n\n              case 2:\n                store = _context.sent;\n\n                if (store.owner) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 6;\n                return base.post(\"\".concat(_this.props.storeId, \"/owner\"), {\n                  data: authData.user.uid\n                });\n\n              case 6:\n                //3. set the state of the inventory component reflect the current user \n                _this.setState({\n                  uid: authData.user.uid,\n                  //who is currently user\n                  owner: store.owner || authData.user.uid //who is the owner of the store\n\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.authenticate = function (provider) {\n      var authProvider = new firebase.auth.FacebookAuthProvider();\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);\n    };\n\n    _this.logout = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('Logging out');\n              _context2.next = 3;\n              return firebase.auth().signOut();\n\n            case 3:\n              _this.setState({\n                uid: null\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.authHandler({\n            user\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var logout = /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }\n      }, \"Log Out!!\"); //1.check if they are login ?\n\n      if (!this.state.uid) {\n        return /*#__PURE__*/React.createElement(Login, {\n          authenticate: this.authenticate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 20\n          }\n        });\n      } //2.check if they are the owner of the store\n\n\n      if (this.state.uid !== this.state.owner) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }\n        }, \" Sorry you are not the owner\"), logout);\n      } //3.they must be the owner , just render the inventory\n\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inventory\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, \" Inventory \"), logout, Object.keys(this.props.fishes).map(function (key) {\n        return /*#__PURE__*/React.createElement(EditFishForm, {\n          key: key,\n          index: key,\n          fish: _this3.props.fishes[key],\n          updatedFish: _this3.props.updatedFish,\n          deleteFish: _this3.props.deleteFish,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }\n        });\n      }), /*#__PURE__*/React.createElement(AddFishForm, {\n        addFish: this.props.addFish,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.props.loadSampleFishes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, \"Load Sample Fishes\"));\n    }\n  }]);\n\n  return Inventory;\n}(React.Component);\n\nInventory.propTypes = {\n  fishes: PropTypes.object,\n  updateFish: PropTypes.func,\n  deleteFish: PropTypes.func,\n  loadSampleFishes: PropTypes.func\n};\nexport default Inventory;","map":{"version":3,"sources":["/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/src/components/Inventory.js"],"names":["React","PropTypes","firebase","AddFishForm","EditFishForm","Login","base","firebaseApp","Inventory","state","uid","owner","authHandler","authData","fetch","props","storeId","context","store","post","data","user","setState","authenticate","provider","authProvider","auth","FacebookAuthProvider","signInWithPopup","then","logout","console","log","signOut","onAuthStateChanged","Object","keys","fishes","map","key","updatedFish","deleteFish","addFish","loadSampleFishes","Component","propTypes","object","updateFish","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Logic';\nimport base, { firebaseApp } from \"../base\";\n\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({user});\n            }\n        })\n    }\n    \n\n    authHandler = async (authData) => {\n        //1. look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context:this });\n        //2. claim it if there is no owner\n        if (!store.owner) {\n            //save it our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        }\n        //3. set the state of the inventory component reflect the current user \n        this.setState({\n            uid: authData.user.uid, //who is currently user\n            owner: store.owner || authData.user.uid //who is the owner of the store\n        })\n    }\n\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth.FacebookAuthProvider();\n        firebaseApp\n        .auth()\n        .signInWithPopup(authProvider)\n        .then(this.authHandler);\n    };\n\n    logout = async () => {\n        console.log('Logging out');\n        await firebase.auth().signOut();\n        this.setState({uid:null});\n    }\n\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out!!</button>\n        //1.check if they are login ?\n        if(!this.state.uid){\n            return <Login authenticate={this.authenticate}/>;\n        }\n        //2.check if they are the owner of the store\n        if(this.state.uid !== this.state.owner){\n            return (\n                <div>\n                    <p> Sorry you are not the owner</p>\n                    {logout}\n                </div>\n            );\n        }\n        //3.they must be the owner , just render the inventory\n        return (\n            <div className=\"inventory\">\n                <h2> Inventory </h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => (\n                    <EditFishForm \n                        key={key} \n                        index={key}\n                        fish={this.props.fishes[key]} \n                        updatedFish={this.props.updatedFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                ))}\n                <AddFishForm addFish={this.props.addFish}/>\n                <button onClick={this.props.loadSampleFishes}> \n                    Load Sample Fishes \n                </button>\n            </div>\n            \n        );\n    }\n}\n\nexport default Inventory;\n\n"]},"metadata":{},"sourceType":"module"}