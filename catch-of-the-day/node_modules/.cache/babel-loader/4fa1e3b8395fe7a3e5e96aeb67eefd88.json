{"ast":null,"code":"import _objectSpread from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/src/components/App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      //1.take a copy of the existing state\n      var fishes = _objectSpread({}, _this.state.fishes); //2.add a new fish to that fishes variable \n\n\n      fishes[\"fish\".concat(Date.now())] = fish; //3.set the new fishes object to state\n\n      _this.setState({\n        fishes\n      }); //in es6 it's the same thing.  \n      //my understanding : \n      //1.copy the fish state so that we don't overwrite the existing one and it won't change the value in the future\n      //2.make it new by putting time stamp\n      //3.set the new state and push it in the object  \n      // ** and after put the info in we need to set the form too\n      //this.state.fishes.push(fish);\n      //this.state.fishes.fish1 = fish; it's ususally write in javascript\n\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      //1.take the copy state\n      var order = _objectSpread({}, _this.state.order); //2.either add to the order or update the number in order\n\n\n      order[key] = order[key] + 1 || 1; //3.call setState to update the our object\n\n      _this.setState({\n        order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        tagline: \"Fresh Seafood Market\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"fishes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, Object.keys(this.state.fishes).map(function (key) {\n        return /*#__PURE__*/React.createElement(Fish, {\n          key: key,\n          index: key,\n          details: _this2.state.fishes[key],\n          addToOrder: _this2.addToOrder,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 32\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(Order, Object.assign({}, this.state, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Inventory, {\n        addFish: this.addFish,\n        loadSampleFishes: this.loadSampleFishes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App; //how does anything get into the component? it's prop!","map":{"version":3,"sources":["/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","sampleFishes","Fish","App","state","fishes","order","addFish","fish","Date","now","setState","loadSampleFishes","addToOrder","key","Object","keys","map","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,G;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,KAAK,EAAE;AAFH,K;;UAKRC,O,GAAU,UAACC,IAAD,EAAU;AAChB;AACA,UAAOH,MAAM,qBAAO,MAAKD,KAAL,CAAWC,MAAlB,CAAb,CAFgB,CAGhB;;;AACAA,MAAAA,MAAM,eAAQI,IAAI,CAACC,GAAL,EAAR,EAAN,GAA8BF,IAA9B,CAJgB,CAKhB;;AACA,YAAKG,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd,EANgB,CAMY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,K;;UAEDO,gB,GAAmB,YAAM;AACrB,YAAKD,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAGJ;AAAX,OAAd;AACH,K;;UAEDY,U,GAAa,UAACC,GAAD,EAAS;AAClB;AACA,UAAMR,KAAK,qBAAQ,MAAKF,KAAL,CAAWE,KAAnB,CAAX,CAFkB,CAGlB;;;AACAA,MAAAA,KAAK,CAACQ,GAAD,CAAL,GAAaR,KAAK,CAACQ,GAAD,CAAL,GAAa,CAAb,IAAkB,CAA/B,CAJkB,CAKlB;;AACA,YAAKH,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACH,K;;;;;;;6BAEO;AAAA;;AACJ,0BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKS,MAAM,CAACC,IAAP,CAAY,KAAKZ,KAAL,CAAWC,MAAvB,EAA+BY,GAA/B,CACD,UAAAH,GAAG;AAAA,4BAAI,oBAAC,IAAD;AACC,UAAA,GAAG,EAAEA,GADN;AAEC,UAAA,KAAK,EAAIA,GAFV;AAGC,UAAA,OAAO,EAAE,MAAI,CAACV,KAAL,CAAWC,MAAX,CAAkBS,GAAlB,CAHV;AAIC,UAAA,UAAU,EAAE,MAAI,CAACD,UAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OADF,CADL,CAFJ,CADJ,eAaI,oBAAC,KAAD,oBAAW,KAAKT,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAbJ,eAcI,oBAAC,SAAD;AACA,QAAA,OAAO,EAAE,KAAKG,OADd;AAEA,QAAA,gBAAgB,EAAE,KAAKK,gBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADJ;AAqBH;;;;EAzDaf,KAAK,CAACqB,S;;AA6DxB,eAAef,GAAf,C,CAEA","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    addFish = (fish) => {\n        //1.take a copy of the existing state\n        const  fishes = {...this.state.fishes };\n        //2.add a new fish to that fishes variable \n        fishes[`fish${Date.now()}`] = fish;\n        //3.set the new fishes object to state\n        this.setState({ fishes  }); //in es6 it's the same thing.  \n        //my understanding : \n        //1.copy the fish state so that we don't overwrite the existing one and it won't change the value in the future\n        //2.make it new by putting time stamp\n        //3.set the new state and push it in the object  \n        // ** and after put the info in we need to set the form too\n        //this.state.fishes.push(fish);\n        //this.state.fishes.fish1 = fish; it's ususally write in javascript\n    }; \n\n    loadSampleFishes = () => {\n        this.setState({ fishes : sampleFishes })\n    };\n\n    addToOrder = (key) => {\n        //1.take the copy state\n        const order = { ...this.state.order };\n        //2.either add to the order or update the number in order\n        order[key] = order[key] + 1 || 1;\n        //3.call setState to update the our object\n        this.setState({ order });\n    };\n\n    render(){\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\"> \n                    <Header tagline=\"Fresh Seafood Market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(\n                        key => <Fish \n                                key={key} \n                                index = {key}\n                                details={this.state.fishes[key]} \n                                addToOrder={this.addToOrder}\n                                />)}\n                    </ul>\n                </div>\n                <Order {...this.state} />\n                <Inventory \n                addFish={this.addFish} \n                loadSampleFishes={this.loadSampleFishes } \n                />\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n\n//how does anything get into the component? it's prop!"]},"metadata":{},"sourceType":"module"}