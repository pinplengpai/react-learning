{"ast":null,"code":"import _classCallCheck from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createSuper from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/src/components/Order.js\";\nimport React from 'react';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderOrder = function (key) {\n      var fish = _this.props.fishes[key];\n      var count = _this.props.order[key];\n      var isAvailable = fish && fish.status === 'available'; //make sure the fish is loaded before we continue doing it.\n\n      if (!fish) return null;\n\n      if (!isAvailable) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: key,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 20\n          }\n        }, \" Sorry \", fish ? fish.name : \"fish\", \" is no longer available\");\n      }\n\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        classNames: \"order\",\n        key: key,\n        timeout: {\n          enter: 250,\n          exit: 250\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, count, \" lbs \", fish.name, formatPrice(count * fish.price), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.removeFromOrder(key);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, \"\\xD7\")));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orderIds = Object.keys(this.props.order);\n      var total = orderIds.reduce(function (prevTotal, key) {\n        var fish = _this2.props.fishes[key];\n        var count = _this2.props.order[key];\n        var isAvailable = fish && fish.status === 'available';\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, \"Order!\"), /*#__PURE__*/React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, orderIds.map(this.renderOrder)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"total\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, \"Total:\", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/Users/pinplengpai/code/pinplengpai/react-learning/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","TransitionGroup","CSSTransition","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","name","enter","exit","price","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;;IAEMC,K;;;;;;;;;;;;;;;;UACFC,W,GAAc,UAAAC,GAAG,EAAI;AACjB,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb;AACA,UAAMI,KAAK,GAAG,MAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AACA,UAAMM,WAAW,GAAGL,IAAI,IAAIA,IAAI,CAACM,MAAL,KAAgB,WAA5C,CAHiB,CAIjB;;AACA,UAAG,CAACN,IAAJ,EAAU,OAAO,IAAP;;AAEV,UAAI,CAACK,WAAL,EAAiB;AACb,4BAAO;AAAI,UAAA,GAAG,EAAEN,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsBC,IAAI,GAAGA,IAAI,CAACO,IAAR,GAAe,MAAzC,4BAAP;AACH;;AACD,0BACI,oBAAC,aAAD;AACI,QAAA,UAAU,EAAC,OADf;AAEI,QAAA,GAAG,EAAER,GAFT;AAGI,QAAA,OAAO,EAAE;AAACS,UAAAA,KAAK,EAAC,GAAP;AAAYC,UAAAA,IAAI,EAAC;AAAjB,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI;AAAI,QAAA,GAAG,EAAEV,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMI,KADN,WACoBH,IAAI,CAACO,IADzB,EAEMb,WAAW,CAACS,KAAK,GAAGH,IAAI,CAACU,KAAd,CAFjB,eAGI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKT,KAAL,CAAWU,eAAX,CAA2BZ,GAA3B,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CALJ,CADJ;AAaH,K;;;;;;;6BAEQ;AAAA;;AACL,UAAMa,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKb,KAAL,CAAWG,KAAvB,CAAjB;AACA,UAAMW,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAACC,SAAD,EAAYlB,GAAZ,EAAoB;AAC9C,YAAMC,IAAI,GAAG,MAAI,CAACC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb;AACA,YAAMI,KAAK,GAAG,MAAI,CAACF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AACA,YAAMM,WAAW,GAAGL,IAAI,IAAEA,IAAI,CAACM,MAAL,KAAgB,WAA1C;;AACA,YAAGD,WAAH,EAAe;AACX,iBAAOY,SAAS,GAAId,KAAK,GAAGH,IAAI,CAACU,KAAjC;AACH;;AACD,eAAOO,SAAP;AACH,OARa,EAQX,CARW,CAAd;AASA,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,IAA3B;AAAgC,QAAA,SAAS,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKL,QAAQ,CAACM,GAAT,CAAa,KAAKpB,WAAlB,CADL,CAFJ,eAKI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASJ,WAAW,CAACqB,KAAD,CAApB,CAFJ,CALJ,CADJ;AAYH;;;;EAjDetB,KAAK,CAAC0B,S;;AAoD1B,eAAetB,KAAf","sourcesContent":["import React from 'react';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        //make sure the fish is loaded before we continue doing it.\n        if(!fish) return null;\n\n        if (!isAvailable){\n            return <li key={key}> Sorry {fish ? fish.name : \"fish\"} is no longer available</li>;\n        }\n        return(\n            <CSSTransition \n                classNames=\"order\" \n                key={key} \n                timeout={{enter:250, exit:250}} \n            >\n                <li key={key}>\n                    { count } lbs { fish.name } \n                    { formatPrice(count * fish.price) }\n                    <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                </li>\n            </CSSTransition>\n        );\n    };\n\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish&&fish.status === 'available';\n            if(isAvailable){\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0); \n        return (\n            <div className=\"order-wrap\">\n                <h2>Order!</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\"> \n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}